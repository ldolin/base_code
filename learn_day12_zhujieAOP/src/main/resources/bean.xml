<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">


    <!-- 配置spring创建容器时要扫描的包-->
    <context:component-scan base-package="club.ldolin"></context:component-scan>

    <!-- 配置spring开启注解AOP的支持 -->
    <aop:aspectj-autoproxy></aop:aspectj-autoproxy>





    <!--配置AOP-->
    <!--<aop:config>-->

        <!--&lt;!&ndash; 配置切入点表达式 id属性用于指定表达式的唯一标识。expression属性用于指定表达式内容-->
              <!--此标签写在aop:aspect标签内部只能当前切面使用。-->
              <!--它还可以写在aop:aspect外面，此时就变成了所有切面可用-->
          <!--&ndash;&gt;-->
        <!--<aop:pointcut id="pt1" expression="execution(* club.ldolin.service.impl.*.*(..))"></aop:pointcut>-->

        <!--&lt;!&ndash;配置切面 &ndash;&gt;-->
        <!--<aop:aspect id="logAdvice" ref="logger">-->
            <!--&lt;!&ndash; 配置通知的类型，并且建立通知方法和切入点方法的关联&ndash;&gt;-->
            <!--&lt;!&ndash;<aop:before method="printLog" pointcut="execution(* club.ldolin.service.impl.*.*(..))"></aop:before>&ndash;&gt;-->
            <!--&lt;!&ndash;<aop:before method="printLog" pointcut="execution(public void club.ldolin.service.impl.AccountServiceImpl.saveAccount())"></aop:before>&ndash;&gt;-->



            <!--&lt;!&ndash; 配置前置通知：在切入点方法执行之前执行&ndash;&gt;-->
            <!--&lt;!&ndash;<aop:before method="beforePrintLog" pointcut-ref="pt1" ></aop:before>&ndash;&gt;-->

            <!--&lt;!&ndash; 配置后置通知：在切入点方法正常执行之后值。它和异常通知永远只能执行一个&ndash;&gt;-->
            <!--&lt;!&ndash;<aop:after-returning method="afterReturningPrintLog" pointcut-ref="pt1"></aop:after-returning>&ndash;&gt;-->

            <!--&lt;!&ndash; 配置异常通知：在切入点方法执行产生异常之后执行。它和后置通知永远只能执行一个&ndash;&gt;-->
            <!--&lt;!&ndash;<aop:after-throwing method="afterThrowingPrintLog" pointcut-ref="pt1"></aop:after-throwing>&ndash;&gt;-->

            <!--&lt;!&ndash; 配置最终通知：无论切入点方法是否正常执行它都会在其后面执行&ndash;&gt;-->
            <!--&lt;!&ndash;<aop:after method="afterPrintLog" pointcut-ref="pt1"></aop:after>&ndash;&gt;-->


            <!--&lt;!&ndash; 配置环绕通知 详细的注释请看Logger类中&ndash;&gt;-->
            <!--<aop:around method="aroundPringLog" pointcut-ref="pt1"></aop:around>-->
        <!--</aop:aspect>-->
    <!--</aop:config>-->

</beans>